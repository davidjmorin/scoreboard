// Libs
const Nightmare = require('nightmare')
const cheerio = require('cheerio');
const fs = require('fs');

// Consts
var data = fs.readFileSync('/var/www/html/scoreboard/dataUrl.txt', 'utf8');
//const url = 'https://www.mscl.org/live/scorecard/ed7941919f69b0e11e800fef/mHcehsPR9S86T3zQv';
console.log(data.toString());
const url = data.toString();

const interval = 10*1000; // every 10 second

let getData = html => {
  const $ = cheerio.load(html);

  let defaultBatsman = {
    Name: '',
    Runs: '0',
    Balls: '0',
    StrikeRate: '0.0',
    currentlyOnStrike: false,
  };

  let defaultBowler = {
    Name: '',
    CurrentOverBalls: '',
    CurrentOverGivenRuns: '',
    Wickets: '',
    EconomyRate: '',
  };

  let mvccLiveScore = {
    batsman1: {...defaultBatsman},
    batsman2: {...defaultBatsman},
    bowler: {...defaultBowler},
    battingOrder: '',
    battingTeam: '',
    lastEightBalls: [],
    lastUpdated: '0',
    overs: '0',
    requiredRunRate: '0',
    requiredToWin: 'TBD',
    runRate: '0',
    score: '0',
    target: '0',
    wickets: '0'
  };

  $('div.panel.panel-default').each((i, elem) => {
    if( i === 0 ){
      const scoreTotalArray = $(elem).find('div.row div.col-md-6:nth-child(1)').html().trim().split('<hr>')[1].split('</p>');

      /**TEAM-A Data Extraction */

      const teamAFullScore = scoreTotalArray[0].replace('<p>', '');

      const teamANameAndScore = (teamAFullScore.split('(')[0]);
      const teamAOverAndRR = (teamAFullScore.split('(')[1]);

      const teamAName = teamANameAndScore.split('-')[0].replace('<b>', '').replace('</b>', '').trim();
      const teamAScore = teamANameAndScore.split('-')[1].replace('<b>', '').replace('</b>', '').trim();
      const teamARuns = teamAScore.split('/')[0];
      const teamAWickets = teamAScore.split('/')[1];
      const teamAOvers = teamAOverAndRR.split('|')[0].split('</b>')[1].replace('<b>', '').replace('</b>', '').replace('(', '').replace(')', '').trim();
      const teamARR = teamAOverAndRR.split('|')[1].split('</b>')[1].replace('<b>', '').replace('</b>', '').replace('(', '').replace(')', '').trim();

      /**TEAM-B Data Extraction */

      const teamBFullScore = scoreTotalArray[1].replace('<p>', '');

      const teamBNameAndScore = (teamBFullScore.split('(')[0]);
      const teamBOverAndRR = (teamBFullScore.split('(')[1]);

      const teamBName = teamBNameAndScore.split('-')[0].replace('<b>', '').replace('</b>', '').trim();
      const teamBScore = teamBNameAndScore.split('-')[1].replace('<b>', '').replace('</b>', '').trim();
      const teamBRuns = teamBScore.split('/')[0];
      const teamBWickets = teamBScore.split('/')[1];
      const teamBOvers = teamBOverAndRR.split('|')[0].split('</b>')[1].replace('<b>', '').replace('</b>', '').replace('(', '').replace(')', '').trim();
      const teamBRR = teamBOverAndRR.split('|')[1].split('</b>')[1].replace('<b>', '').replace('</b>', '').replace('(', '').replace(')', '').trim();

      mvccLiveScore ={
        teamA: {
          name:teamAName,
          runs: teamARuns,
          wickets: teamAWickets,
          overs: teamAOvers,
          runRate: teamARR
        },
        teamB:{
          name:teamBName,
          runs: teamBRuns,
          wickets: teamBWickets,
          overs: teamBOvers,
          runRate: teamBRR
        },
        lastUpdated: new Date().toLocaleString(),
      };
      console.log(mvccLiveScore);
      fs.writeFileSync('mvccLiveScore.json', JSON.stringify(mvccLiveScore, null, 2), );
    }
  });

}



function runMvccScrapper(){
  console.log('Starting the scrapping');
  const nightmare = Nightmare({ show: false });
  nightmare
  .goto(url)
  .wait('body')
  .wait('div#summaryTab.tab-pane.fade.in.table-responsive.borderless.active')
  .click('li a#scorecardTabAnchor')
  .evaluate(() => document.querySelector('div#summaryTab.tab-pane.fade.in.table-responsive.borderless.active').innerHTML)
  .end()
  .then(response => {
    getData(response);
  }).catch(err => {
    console.log(err);
  }).then(()=>{
    console.log('Scrapping is done');
    console.log('/****************************/');
  });
}

setInterval(function(){
  console.log('/****************************/');
  runMvccScrapper();
},interval);
